//
//  TCAddGoodsViewController.m
//  顺道嘉商家版
//
//  Created by 胡高广 on 2018/1/9.
//  Copyright © 2018年 北京同创共享网络科技有限公司. All rights reserved.
//

#import "TCAddGoodsViewController.h"
#import "TCSpecifView.h"
#import "TZImagePickerController.h"
#import <objc/runtime.h>
#import <objc/message.h>
#import "UIView+Layout.h"
#import "TZTestCell.h"
#import <AssetsLibrary/AssetsLibrary.h>
#import <Photos/Photos.h>
#import "LxGridViewFlowLayout.h"
#import "TZImageManager.h"
#import "TZVideoPlayerController.h"
#import "TZPhotoPreviewController.h"
#import "TCShopsManaerViewController.h"
#import "TCSeleCateViewController.h" //选择品类

@interface TCAddGoodsViewController ()<UIScrollViewDelegate,UITextFieldDelegate,UITextViewDelegate,tapDelegete,TZImagePickerControllerDelegate,UICollectionViewDelegate,UICollectionViewDataSource,UIActionSheetDelegate,UIImagePickerControllerDelegate,UINavigationControllerDelegate>
{
    NSMutableArray *_selectedPhotos;
    NSMutableArray *_selectedAssets;
    BOOL _isSelectOriginalPhoto;
    
    CGFloat _itemWH;
    CGFloat _margin;
    UIView *backView;
    UIView *gary_oneView;
    UIView *specbjView;
    NSInteger j;
}
@property (nonatomic, strong) UIScrollView *mainScroller; //创建的tableView
@property (nonatomic, strong) UITextView *textview;
@property (nonatomic, strong) UILabel *texteLabel;
@property (nonatomic, strong) NSUserDefaults *userdefaults;
@property (nonatomic, strong) UIImagePickerController *imagePickerVc;
@property (nonatomic, strong) UICollectionView *collectionView;
@property (strong, nonatomic) LxGridViewFlowLayout *layout;
@property (strong, nonatomic) CLLocation *location;
@property (nonatomic, strong) UILabel *seleCategorylabel;
@property (nonatomic, strong) NSData *shopPicData;
@property (nonatomic, strong) NSString *idStr;
@property (nonatomic, strong) NSMutableArray *picArr; //图片的数组
@property (nonatomic, strong) UIButton *saoCodeBtn;//上架按钮
@property (nonatomic, strong) UIButton *xiaCodeBtn;//下架按钮
@property (nonatomic, strong) UIView *gary_twoView;
@property (nonatomic, strong) UIView *gary_threeView;
@property (nonatomic, strong) UIView *back_twoBackView;
@property (nonatomic, strong) NSString *showQstr;
@property (nonatomic, strong) NSArray *titleArr;
@property (nonatomic, strong) NSArray *placeArr;
@property (nonatomic, strong) NSMutableArray *spectArr;//规格的数组

@end

@implementation TCAddGoodsViewController

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"
- (UIImagePickerController *)imagePickerVc {
    if (_imagePickerVc == nil) {
        _imagePickerVc = [[UIImagePickerController alloc] init];
        _imagePickerVc.delegate = self;
        // set appearance / 改变相册选择页的导航栏外观
        _imagePickerVc.navigationBar.barTintColor = self.navigationController.navigationBar.barTintColor;
        _imagePickerVc.navigationBar.tintColor = self.navigationController.navigationBar.tintColor;
        UIBarButtonItem *tzBarItem, *BarItem;
        if (iOS9Later) {
            tzBarItem = [UIBarButtonItem appearanceWhenContainedInInstancesOfClasses:@[[TZImagePickerController class]]];
            BarItem = [UIBarButtonItem appearanceWhenContainedInInstancesOfClasses:@[[UIImagePickerController class]]];
        } else {
            tzBarItem = [UIBarButtonItem appearanceWhenContainedIn:[TZImagePickerController class], nil];
            BarItem = [UIBarButtonItem appearanceWhenContainedIn:[UIImagePickerController class], nil];
        }
        NSDictionary *titleTextAttributes = [tzBarItem titleTextAttributesForState:UIControlStateNormal];
        [BarItem setTitleTextAttributes:titleTextAttributes forState:UIControlStateNormal];
    }
    return _imagePickerVc;
}


- (void)viewDidLoad {
    [super viewDidLoad];
    if (self.seleDic) {
        self.title = @"编辑商品";
    }else{
        self.title = @"添加商品";
    }
    self.view.backgroundColor = TCBgColor;
    self.userdefaults = [NSUserDefaults standardUserDefaults];
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(addCatetongzhi:)name:@"addCatetongzhi" object:nil];
    //初始化十足
    _selectedPhotos = [NSMutableArray array];
    _selectedAssets = [NSMutableArray array];
    _picArr = [NSMutableArray array];
    _spectArr = [NSMutableArray array];
    //创建View
    [self createUI];
    
    
    if (self.QrDic){
        NSString *picStr = self.QrDic[@"img"];
        if ([picStr isEqualToString:@""]) {
            
        }else{
            NSArray *arr = @[self.QrDic[@"img"]];
            _selectedPhotos = [NSMutableArray arrayWithArray:arr];
             _picArr = [NSMutableArray arrayWithArray:arr];
        }
    }else if (self.seleDic){
        self.idStr = self.seleDic[@"goodscateid"];
        NSArray *arr = self.seleDic[@"images"];
        for (int i = 0; i < arr.count; i++) {
            [_selectedPhotos addObject:arr[i][@"src"]];
            [_picArr addObject:arr[i][@"src"]];
        }
    }
    // Do any additional setup after loading the view.
}

//这里是商品的品类
- (void)addCatetongzhi:(NSNotification *)text{
    
    NSLog(@"%@ %@",text.userInfo[@"textOne"],text.userInfo[@"textTwo"]);
    self.idStr = [NSString stringWithFormat:@"%@",text.userInfo[@"textTwo"]];
    self.seleCategorylabel.text = text.userInfo[@"textOne"];
    
}
//创建View
- (void)createUI
{
    self.showQstr = [NSString stringWithFormat:@"%@",[self.userdefaults valueForKey:@"showQR"]];
    //创建滚动视图
    _mainScroller = [[UIScrollView alloc]initWithFrame:CGRectMake(0, 0, WIDHT, HEIGHT)];
    _mainScroller.backgroundColor = [[UIColor lightGrayColor]colorWithAlphaComponent:0.3];
    _mainScroller.delegate = self;
    _mainScroller.backgroundColor = TCUIColorFromRGB(0xFFFFFF);
    [self.view addSubview: _mainScroller];
    _mainScroller.contentSize = CGSizeMake(WIDHT, HEIGHT);
    if ([self.showQstr isEqualToString:@"1"]) {
        //创建第一块的视图
        NSArray *title_oneArr = @[@"商品名称",@"商品条码",@"品类"];
        NSArray *placeArr = @[@"输入商品名称（1-25字）",@"填写商品条形码（选填）"];
        for (int i = 0; i < title_oneArr.count; i ++) {
            UILabel *title_oneLabel = [UILabel publicLab:title_oneArr[i] textColor:TCUIColorFromRGB(0x666666) textAlignment:NSTextAlignmentLeft fontWithName:@"PingFangSC-Regular" size:15 numberOfLines:0];
            title_oneLabel.frame = CGRectMake(15, 45*i, 60, 45);
            [_mainScroller addSubview:title_oneLabel];
            
            //线
            UIView *line_oneView = [[UIView alloc] init];
            line_oneView.backgroundColor = TCBgColor;
            line_oneView.frame = CGRectMake(15, 45 + 45*i, WIDHT - 15, 1);
            [_mainScroller addSubview:line_oneView];
            
            if (i < 2){
                //输入框
                UITextField *textfield = [[UITextField alloc]init];
                textfield.frame = CGRectMake(CGRectGetMaxX(title_oneLabel.frame) + 10, 45*i, WIDHT - 15 - (CGRectGetMaxX(title_oneLabel.frame) + 10), 45);
                textfield.font = [UIFont systemFontOfSize:15];
                [textfield addTarget:self  action:@selector(alueChange:)  forControlEvents:UIControlEventAllEditingEvents];
                textfield.delegate = self;
                textfield.textAlignment = NSTextAlignmentRight;
                textfield.placeholder = placeArr[i];
                textfield.tag = 100 + i;
                textfield.textColor = TCUIColorFromRGB(0x333333);
                [_mainScroller addSubview:textfield];
                
                //选中商品进来的
                if (self.seleDic) {
                    if (i == 0) {
                        textfield.text = [NSString stringWithFormat:@"%@",self.seleDic[@"name"]];
                    }else if (i == 1){
                        textfield.text = [NSString stringWithFormat:@"%@",self.seleDic[@"barcode"]];
                    }
                }
                //扫码进来的
                if (self.QrDic){
                    if (i == 0){
                        textfield.text = self.QrDic[@"name"];
                    }
                }
                
                if (i == 1){
                    
                    if (self.codeStr) {
                        textfield.text = self.codeStr;
                    }
                }
                
            } else {
                self.seleCategorylabel = [UILabel publicLab:@"选择商品品类" textColor:TCUIColorFromRGB(0x53C3C3) textAlignment:NSTextAlignmentRight fontWithName:@"PingFangSC-Regular" size:15 numberOfLines:0];
                self.seleCategorylabel.frame = CGRectMake(CGRectGetMaxX(title_oneLabel.frame), 45 * 2, WIDHT - 40 - CGRectGetMaxX(title_oneLabel.frame), 45);
                self.seleCategorylabel.userInteractionEnabled = YES;
                if (self.seleDic) {
                    self.seleCategorylabel.text = self.seleDic[@"goodscatename"];
                }
                [_mainScroller addSubview:self.seleCategorylabel];
                
                //加手势
                UITapGestureRecognizer *tapCate = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(tapCate)];
                [self.seleCategorylabel addGestureRecognizer:tapCate];
                
                //三角图标
                UIImageView *imageSan = [[UIImageView alloc] init];
                imageSan.image = [UIImage imageNamed:@"进入小三角（灰）"];
                imageSan.frame = CGRectMake(CGRectGetMaxX(self.seleCategorylabel.frame) + 20, (45 - 8)/2 + 45 *2, 5, 8);
                [_mainScroller addSubview:imageSan];
            }
        }
        //小灰框
        gary_oneView = [[UIView alloc] init];
        gary_oneView.frame = CGRectMake(0, 45 *3, WIDHT, 10);
        gary_oneView.backgroundColor = TCBgColor;
        [_mainScroller addSubview:gary_oneView];
    }else{
        //创建第一块的视图
        NSArray *title_oneArr = @[@"商品名称",@"品类"];
        NSArray *placeArr = @[@"输入商品名称（1-25字）"];
        for (int i = 0; i < title_oneArr.count; i ++) {
            UILabel *title_oneLabel = [UILabel publicLab:title_oneArr[i] textColor:TCUIColorFromRGB(0x666666) textAlignment:NSTextAlignmentLeft fontWithName:@"PingFangSC-Regular" size:15 numberOfLines:0];
            title_oneLabel.frame = CGRectMake(15, 45*i, 60, 45);
            [_mainScroller addSubview:title_oneLabel];
            
            //线
            UIView *line_oneView = [[UIView alloc] init];
            line_oneView.backgroundColor = TCBgColor;
            line_oneView.frame = CGRectMake(15, 45 + 45*i, WIDHT - 15, 1);
            [_mainScroller addSubview:line_oneView];
            
            
            if (i < 1){
                //输入框
                UITextField *textfield = [[UITextField alloc]init];
                textfield.frame = CGRectMake(CGRectGetMaxX(title_oneLabel.frame) + 10, 45*i, WIDHT - 15 - (CGRectGetMaxX(title_oneLabel.frame) + 10), 45);
                textfield.font = [UIFont systemFontOfSize:15];
                [textfield addTarget:self  action:@selector(alueChange:)  forControlEvents:UIControlEventAllEditingEvents];
                textfield.delegate = self;
                textfield.textAlignment = NSTextAlignmentRight;
                textfield.placeholder = placeArr[i];
                textfield.tag = 100 + i;
                textfield.textColor = TCUIColorFromRGB(0x333333);
                [_mainScroller addSubview:textfield];
                
                //选中商品进来的
                if (self.seleDic) {
                    if (i == 0) {
                        textfield.text = [NSString stringWithFormat:@"%@",self.seleDic[@"name"]];
                    }
                }
                
                
            } else {
                self.seleCategorylabel = [UILabel publicLab:@"选择商品品类" textColor:TCUIColorFromRGB(0x53C3C3) textAlignment:NSTextAlignmentRight fontWithName:@"PingFangSC-Regular" size:15 numberOfLines:0];
                self.seleCategorylabel.frame = CGRectMake(CGRectGetMaxX(title_oneLabel.frame), 45, WIDHT - 40 - CGRectGetMaxX(title_oneLabel.frame), 45);
                self.seleCategorylabel.userInteractionEnabled = YES;
                if (self.seleDic) {
                    self.seleCategorylabel.text = self.seleDic[@"name"];
                }
                [_mainScroller addSubview:self.seleCategorylabel];
                
                //加手势
                UITapGestureRecognizer *tapCate = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(tapCate)];
                [self.seleCategorylabel addGestureRecognizer:tapCate];
                
                //三角图标
                UIImageView *imageSan = [[UIImageView alloc] init];
                imageSan.image = [UIImage imageNamed:@"进入小三角（灰）"];
                imageSan.frame = CGRectMake(CGRectGetMaxX(self.seleCategorylabel.frame) + 20, (45 - 8)/2 + 45 *2, 5, 8);
                [_mainScroller addSubview:imageSan];
            }
        }
        //小灰框
        gary_oneView = [[UIView alloc] init];
        gary_oneView.frame = CGRectMake(0, 45 *2, WIDHT, 10);
        gary_oneView.backgroundColor = TCBgColor;
        [_mainScroller addSubview:gary_oneView];
    }
    
    
    
    //第二个大段,添加图片
    backView = [[UIView alloc] init];
    backView.frame = CGRectMake(0, CGRectGetMaxY(gary_oneView.frame), WIDHT, 19);
    backView.backgroundColor = TCUIColorFromRGB(0xFFFFFF);
    [_mainScroller addSubview:backView];
    //图片的title
    UILabel *title_twoLabel = [UILabel publicLab:@"商品图片" textColor:TCUIColorFromRGB(0x333333) textAlignment:NSTextAlignmentLeft fontWithName:@"PingFangSC-Regular" size:14 numberOfLines:0];
    title_twoLabel.frame = CGRectMake(15, 15, 56, 14);
    [backView addSubview:title_twoLabel];
    //
    UILabel *title_disLabel = [UILabel publicLab:@"(最多上传9张)" textColor:TCUIColorFromRGB(0x9F9D9B) textAlignment:NSTextAlignmentLeft fontWithName:@"PingFangSC-Regular" size:12 numberOfLines:0];
    title_disLabel.frame = CGRectMake(CGRectGetMaxX(title_twoLabel.frame), 17, 90, 12);
    [backView addSubview:title_disLabel];
    
    _layout = [[LxGridViewFlowLayout alloc] init];
    _margin = 10;
    // _itemWH = (self.view.tz_width - 2 * _margin - 4) / 4 - _margin;
    
    _itemWH = (WIDHT - 65) / 4;
    
    _layout.itemSize = CGSizeMake(_itemWH, _itemWH);
    _layout.minimumInteritemSpacing = _margin;
    _layout.minimumLineSpacing = _margin;
    
    _collectionView = [[UICollectionView alloc]initWithFrame:CGRectMake(0,CGRectGetMaxY(backView.frame) + 15, WIDHT, (_itemWH + 10) + 15 + 10)collectionViewLayout:_layout];
    _layout.panGestureRecognizerEnable = NO;
    _collectionView.backgroundColor = TCUIColorFromRGB(0xFFFFFF);
    _collectionView.contentInset = UIEdgeInsetsMake(15,15,15,20);
    _collectionView.delegate = self;
    _collectionView.dataSource = self;
    [_mainScroller addSubview:_collectionView];
    [_collectionView registerClass:[TZTestCell class] forCellWithReuseIdentifier:@"TZTestCell"];
    
    //灰框
    UIView *gary_twoView = [[UIView alloc] init];
    self.gary_twoView = gary_twoView;
    gary_twoView.frame = CGRectMake(0, CGRectGetMaxY(_collectionView.frame), WIDHT, 10);
    gary_twoView.backgroundColor = TCBgColor;
    [_mainScroller addSubview:gary_twoView];
    specbjView = [[UIView alloc]initWithFrame:CGRectMake(0, CGRectGetMaxY(self.gary_twoView.frame), WIDHT, 180)];
    specbjView.backgroundColor = TCUIColorFromRGB(0xFFFFFF);
    [_mainScroller addSubview:specbjView];
    [self addUI];
            //小灰框
            UIView *gary_threeView = [[UIView alloc] init];
            self.gary_threeView = gary_threeView;
            gary_threeView.frame = CGRectMake(0, CGRectGetMaxY(specbjView.frame), WIDHT, 10);
            gary_threeView.backgroundColor = TCBgColor;
            [_mainScroller addSubview:gary_threeView];
            
            //创建view
            UIView *back_twoBackView = [[UIView alloc] init];
            self.back_twoBackView = back_twoBackView;
            back_twoBackView.backgroundColor = TCUIColorFromRGB(0xFFFFFF);
            back_twoBackView.frame = CGRectMake(0, CGRectGetMaxY(gary_threeView.frame), WIDHT, 180);
            [_mainScroller addSubview:back_twoBackView];
            //title
            UILabel *titleBack = [UILabel publicLab:@"商品文字描述" textColor:TCUIColorFromRGB(0x333333) textAlignment:NSTextAlignmentLeft fontWithName:@"PingFangSC-Regular" size:15 numberOfLines:0];
            titleBack.frame = CGRectMake(15, 15, 100, 15);
            [back_twoBackView addSubview:titleBack];
            //textView的灰框
            UIView *GaryTextView = [[UIView alloc] init];
            GaryTextView.backgroundColor = TCUIColorFromRGB(0xF5F5F5);
            GaryTextView.frame = CGRectMake(15, CGRectGetMaxY(titleBack.frame) + 10, WIDHT - 30, 120);
            [back_twoBackView addSubview:GaryTextView];
    
    
            
            self.textview = [[UITextView alloc]init];
            self.textview.frame = CGRectMake(10, 5, WIDHT - 30 - 20, 100);
            self.textview.delegate = self;
            self.textview.textColor = TCUIColorFromRGB(0x333333);
            self.textview.font = [UIFont fontWithName:@"PingFangSC-Regular" size:14];
            self.extendedLayoutIncludesOpaqueBars = YES;
            self.textview.backgroundColor = TCUIColorFromRGB(0xF5F5F5);

            if (self.seleDic){
                self.textview.text = self.seleDic[@"description"];
            }else if (self.QrDic){
                self.textview.text = self.QrDic[@"description"];
            }
            [GaryTextView addSubview:self.textview];
    
    ////添加label
    self.texteLabel = [[UILabel alloc]init];
    self.texteLabel.frame = CGRectMake(10, 10, WIDHT - 30 - 20, 100);
    self.texteLabel.font = [UIFont fontWithName:@"PingFangSC-Medium" size:14];
    self.texteLabel.text = @"请简单的描述该商品";
    self.texteLabel.textColor = TCUIColorFromRGB(0xC4C4C4);
    self.texteLabel.numberOfLines = 0;
    [self.texteLabel sizeToFit];
    [GaryTextView addSubview:self.texteLabel];
    
    if (self.textview.text.length > 0) {
        self.texteLabel.hidden = YES;
    }else{
        self.texteLabel.hidden = NO;
    }
    
            
            //上架出售和放入下架库
            UIButton *saoCodeBtn = [UIButton buttonWithType:UIButtonTypeCustom];
            self.saoCodeBtn = saoCodeBtn;
            saoCodeBtn.frame = CGRectMake(15, CGRectGetMaxY(back_twoBackView.frame) + 40, 155, 48);
            [saoCodeBtn setTitle:@"上架出售" forState:UIControlStateNormal];
            [saoCodeBtn setTitleColor:TCUIColorFromRGB(0xFFFFFF) forState:UIControlStateNormal];
            saoCodeBtn.layer.cornerRadius = 5;
            saoCodeBtn.userInteractionEnabled = YES;
            saoCodeBtn.titleLabel.font = [UIFont systemFontOfSize:17];
            saoCodeBtn.layer.masksToBounds = YES;
            saoCodeBtn.backgroundColor = TCUIColorFromRGB(0x53C3C3);
            saoCodeBtn.alpha = 1;
            saoCodeBtn.contentHorizontalAlignment = UIControlContentHorizontalAlignmentCenter;
            [saoCodeBtn addTarget:self action:@selector(saoCodeBtnClicked:) forControlEvents:UIControlEventTouchUpInside];
            [_mainScroller addSubview:saoCodeBtn];
            
            UIButton *xiaCodeBtn = [UIButton buttonWithType:UIButtonTypeCustom];
            self.xiaCodeBtn = xiaCodeBtn;
            xiaCodeBtn.frame = CGRectMake(WIDHT - 15 - 155, CGRectGetMaxY(back_twoBackView.frame) + 40, 155, 48);
            [xiaCodeBtn setTitle:@"放入下架库" forState:UIControlStateNormal];
            [xiaCodeBtn setTitleColor:TCUIColorFromRGB(0x53C3C3) forState:UIControlStateNormal];
            xiaCodeBtn.layer.cornerRadius = 5;
            xiaCodeBtn.layer.borderWidth = 1;
            xiaCodeBtn.alpha = 1;
            xiaCodeBtn.userInteractionEnabled = YES;
            xiaCodeBtn.titleLabel.font = [UIFont fontWithName:@"PingFangSC-Medium" size:17];
            xiaCodeBtn.layer.borderColor = TCUIColorFromRGB(0x53C3C3).CGColor;
            xiaCodeBtn.layer.masksToBounds = YES;
            xiaCodeBtn.backgroundColor = TCUIColorFromRGB(0xFFFFFF);
            xiaCodeBtn.contentHorizontalAlignment = UIControlContentHorizontalAlignmentCenter;
            [xiaCodeBtn addTarget:self action:@selector(xiaCodeBtnBtnClicked:) forControlEvents:UIControlEventTouchUpInside];
            [_mainScroller addSubview:xiaCodeBtn];
            
            _mainScroller.contentSize = CGSizeMake(WIDHT, CGRectGetMaxY(xiaCodeBtn.frame) + 20);
    
}
- (void)alueChange:(UITextField *)textField{
    UITextField *spec_textfield = (UITextField *)[self.view viewWithTag:1000];
    UITextField *price_textfield = (UITextField *)[self.view viewWithTag:1001];
    UITextField *stock_textfield = (UITextField *)[self.view viewWithTag:1002];
    UITextField *name_textfield = (UITextField *)[self.view viewWithTag:100];
    self.saoCodeBtn.enabled = (spec_textfield.text.length != 0 && price_textfield.text.length != 0 && stock_textfield.text.length != 0 && name_textfield.text.length != 0 && _selectedPhotos.count != 0);
    if (self.saoCodeBtn.enabled == YES) {
        self.saoCodeBtn.userInteractionEnabled = YES;
        self.saoCodeBtn.alpha = 1;
        self.xiaCodeBtn.userInteractionEnabled = YES;
        self.xiaCodeBtn.alpha = 1;
    }
    
}

//判断开始输入
-(void)textViewDidChange:(UITextView *)textView
{
    if(textView.text.length > 0){
        self.texteLabel.hidden = YES;
    }else{
        self.texteLabel.hidden = NO;
    }
}

#pragma mark -- saoCodeBtnClicked
- (void)saoCodeBtnClicked:(UIButton *)sender
{
    NSLog(@"上架出售");
    if ([self.seleCategorylabel.text isEqualToString:@"选择商品品类"]) {
        [TCProgressHUD showMessage:@"请选择商品品类"];
    }else{
        [self createQuest:@"0"];
    }
    
}

- (void)xiaCodeBtnBtnClicked:(UIButton *)sender
{
    NSLog(@"放入下架库");
    if ([self.seleCategorylabel.text isEqualToString:@"选择商品品类"]) {
        [TCProgressHUD showMessage:@"请选择商品品类"];
    }else{
        [self createQuest:@"1"];
    }
    
}

#pragma mark -- 上架和下架
- (void)createQuest:(NSString *)status
{
    UITextField *goodsNamefield = (UITextField *)[self.view viewWithTag:100];
    UITextField *codesfield = (UITextField *)[self.view viewWithTag:101];

    UITextField *onetextField = (UITextField *)[self.view viewWithTag:1000];
    UITextField *twotextField = (UITextField *)[self.view viewWithTag:1001];
    UITextField *threetextField = (UITextField *)[self.view viewWithTag:1002];

    //商品规格的json
    NSMutableArray *commitArr = [NSMutableArray array];
    NSDictionary *jsonDic = @{@"spec":onetextField.text,@"price":twotextField.text,@"stockCount":threetextField.text};
//    NSString *strs = [self convertToJsonData:jsonDic];
    [commitArr addObject:jsonDic];
    NSData *jsonData = [NSJSONSerialization dataWithJSONObject:commitArr options:NSJSONWritingPrettyPrinted error:nil];
    NSString *strs = [[NSString alloc]initWithData:jsonData encoding:NSUTF8StringEncoding];
//
    //图片的json
    NSMutableArray *arrPic = [NSMutableArray array];
    NSDictionary *jsonPicDic;
    for (int i = 0; i < _picArr.count; i++) {
        
        jsonPicDic = @{@"shop_image":_picArr[i]};
       // [jsonPicDic setValue:_picArr[i] forKey:@"shop_image"];
    }
//    [arrPic addObject: jsonPicDic];
//
//    NSData *imageData = [NSJSONSerialization dataWithJSONObject:arrPic options:NSJSONWritingPrettyPrinted error:nil];
    NSString *strData = [self convertToJsonData:jsonPicDic];

    NSDictionary *dic;
    NSDictionary *parameters;
    NSString *shopID = [NSString stringWithFormat:@"%@",[_userdefaults valueForKey:@"shopID"]];
    
    NSUserDefaults *userDefault = [NSUserDefaults standardUserDefaults];
    NSString *Timestr = [TCGetTime getCurrentTime];
    NSString *midStr = [NSString stringWithFormat:@"%@",[userDefault valueForKey:@"userID"]];
    NSString *tokenStr = [NSString stringWithFormat:@"%@",[userDefault valueForKey:@"userToken"]];
    if (self.seleDic){
        NSLog(@"选中进来的");
        NSString *goodsid = [NSString stringWithFormat:@"%@",self.seleDic[@"goodsid"]];
        if (codesfield.text.length == 0) {
            if (self.textview.text.length == 0) {
                dic = @{@"mid":midStr,@"token":tokenStr,@"timestamp":Timestr,@"shopId":shopID,@"goodsName":goodsNamefield.text,@"goodsCateId":self.idStr,@"specs":strs,@"status":status,@"imgName":strData,@"goodsId":goodsid};
                NSString *singStr = [TCServerSecret loginStr:dic];
                parameters = @{@"mid":midStr,@"token":tokenStr,@"timestamp":Timestr,@"shopId":shopID,@"goodsName":goodsNamefield.text,@"goodsCateId":self.idStr,@"specs":strs,@"status":status,@"imgName":strData,@"sign":singStr,@"goodsId":goodsid};
            }else{
                dic = @{@"mid":midStr,@"token":tokenStr,@"timestamp":Timestr,@"shopId":shopID,@"goodsName":goodsNamefield.text,@"goodsCateId":self.idStr,@"specs":strs,@"status":status,@"imgName":strData,@"goodsId":goodsid,@"description":self.textview.text};
                NSString *singStr = [TCServerSecret loginStr:dic];
                parameters = @{@"mid":midStr,@"token":tokenStr,@"timestamp":Timestr,@"shopId":shopID,@"goodsName":goodsNamefield.text,@"goodsCateId":self.idStr,@"specs":strs,@"status":status,@"imgName":strData,@"sign":singStr,@"goodsId":goodsid,@"description":self.textview.text};
            }
        }else{
            if (self.textview.text.length == 0) {
                dic = @{@"mid":midStr,@"token":tokenStr,@"timestamp":Timestr,@"shopId":shopID,@"goodsName":goodsNamefield.text,@"goodsCateId":self.idStr,@"specs":strs,@"status":status,@"imgName":strData,@"goodsId":goodsid,@"barcode":codesfield.text};
                NSString *singStr = [TCServerSecret loginStr:dic];
                parameters = @{@"mid":midStr,@"token":tokenStr,@"timestamp":Timestr,@"shopId":shopID,@"goodsName":goodsNamefield.text,@"goodsCateId":self.idStr,@"specs":strs,@"status":status,@"imgName":strData,@"sign":singStr,@"goodsId":goodsid,@"barcode":codesfield.text};
            }else{
                dic = @{@"mid":midStr,@"token":tokenStr,@"timestamp":Timestr,@"shopId":shopID,@"goodsName":goodsNamefield.text,@"goodsCateId":self.idStr,@"specs":strs,@"status":status,@"imgName":strData,@"goodsId":goodsid,@"description":self.textview.text,@"barcode":codesfield.text};
                NSString *singStr = [TCServerSecret loginStr:dic];
                parameters = @{@"mid":midStr,@"token":tokenStr,@"timestamp":Timestr,@"shopId":shopID,@"goodsName":goodsNamefield.text,@"goodsCateId":self.idStr,@"specs":strs,@"status":status,@"imgName":strData,@"sign":singStr,@"goodsId":goodsid,@"description":self.textview.text,@"barcode":codesfield.text};
            }
        }
        // [TCNetworking postWithTcUrlString:[TCServerSecret loginAndRegisterSecretOffline:@"202011"] paramter:parameters
        [TCNetworking postWithTcUrlString:[TCServerSecret loginAndRegisterSecretOffline:@"202013"] paramter:parameters success:^(NSString *jsonStr, NSDictionary *jsonDic) {
             NSString *codeStr = [NSString stringWithFormat:@"%@",jsonDic[@"code"]];
            if ([codeStr isEqualToString:@"1"]) {
                
                [TCProgressHUD showMessage:[NSString stringWithFormat:@"%@",jsonDic[@"msg"]]];
                [self.navigationController popViewControllerAnimated:YES];
                [[NSNotificationCenter defaultCenter] postNotificationName:@"tongzhishuaxin" object:nil];
            }
            
        } failure:^(NSError *error) {
            [TCProgressHUD showMessage:[NSString stringWithFormat:@"%@",jsonDic[@"msg"]]];
        }];
        
    }else{
        if (self.QrDic) {
            if (self.textview.text.length == 0) {
                dic = @{@"mid":midStr,@"token":tokenStr,@"timestamp":Timestr,@"shopId":shopID,@"goodsName":goodsNamefield.text,@"goodsCateId":self.idStr,@"specs":strs,@"status":status,@"imgName":strData,@"barcode":codesfield.text};
                NSString *singStr = [TCServerSecret loginStr:dic];
                parameters = @{@"mid":midStr,@"token":tokenStr,@"timestamp":Timestr,@"shopId":shopID,@"goodsName":goodsNamefield.text,@"goodsCateId":self.idStr,@"specs":strs,@"status":status,@"imgName":strData,@"sign":singStr,@"barcode":codesfield.text};
            }else{
                dic = @{@"mid":midStr,@"token":tokenStr,@"timestamp":Timestr,@"barcode":codesfield.text,@"description":self.textview.text,@"shopId":shopID,@"goodsName":goodsNamefield.text,@"goodsCateId":self.idStr,@"specs":strs,@"status":status,@"imgName":strData};
                NSString *singStr = [TCServerSecret loginStr:dic];
                parameters = @{@"mid":midStr,@"token":tokenStr,@"timestamp":Timestr,@"barcode":codesfield.text,@"description":self.textview.text,@"shopId":shopID,@"goodsName":goodsNamefield.text,@"goodsCateId":self.idStr,@"specs":strs,@"status":status,@"imgName":strData,@"sign":singStr};
            }
            [TCNetworking postWithTcUrlString:[TCServerSecret loginAndRegisterSecretOffline:@"202011"] paramter:parameters success:^(NSString *jsonStr, NSDictionary *jsonDic) {
                NSString *codeStr = [NSString stringWithFormat:@"%@",jsonDic[@"code"]];
                if ([codeStr isEqualToString:@"1"]) {
                    
                    if (self.isQr == YES){
                        for (UIViewController *controller in self.navigationController.viewControllers) {
                            if ([controller isKindOfClass:[TCShopsManaerViewController class]]) {
                                [self.navigationController popToViewController:controller animated:YES];
                                [[NSNotificationCenter defaultCenter] postNotificationName:@"tongzhishuaxin" object:nil];
                            }
                        }
                    } else {
                        [self.navigationController popViewControllerAnimated:YES];
                        [[NSNotificationCenter defaultCenter] postNotificationName:@"tongzhishuaxin" object:nil];
                    }
                    NSLog(@"%@",jsonDic);
                    
                } else {
        [TCProgressHUD showMessage:jsonDic[@"msg"]];
                }
            } failure:^(NSError *error) {
                nil;
            }];
        }else{
            if (codesfield.text.length == 0){
                if (self.textview.text.length == 0) {
                    dic = @{@"mid":midStr,@"token":tokenStr,@"timestamp":Timestr,@"shopId":shopID,@"goodsName":goodsNamefield.text,@"goodsCateId":self.idStr,@"specs":strs,@"status":status,@"imgName":strData};
                    NSString *singStr = [TCServerSecret loginStr:dic];
                    parameters = @{@"mid":midStr,@"token":tokenStr,@"timestamp":Timestr,@"shopId":shopID,@"goodsName":goodsNamefield.text,@"goodsCateId":self.idStr,@"specs":strs,@"status":status,@"imgName":strData,@"sign":singStr};
                }else{
                    dic = @{@"mid":midStr,@"token":tokenStr,@"timestamp":Timestr,@"description":self.textview.text,@"shopId":shopID,@"goodsName":goodsNamefield.text,@"goodsCateId":self.idStr,@"specs":strs,@"status":status,@"imgName":strData};
                    NSString *singStr = [TCServerSecret loginStr:dic];
                    parameters = @{@"mid":midStr,@"token":tokenStr,@"timestamp":Timestr,@"description":self.textview.text,@"shopId":shopID,@"goodsName":goodsNamefield.text,@"goodsCateId":self.idStr,@"specs":strs,@"status":status,@"imgName":strData,@"sign":singStr};
                }
                
            } else{
                if (self.textview.text.length == 0) {
                    dic = @{@"mid":midStr,@"token":tokenStr,@"timestamp":Timestr,@"shopId":shopID,@"goodsName":goodsNamefield.text,@"goodsCateId":self.idStr,@"specs":strs,@"status":status,@"imgName":strData,@"barcode":codesfield.text};
                    NSString *singStr = [TCServerSecret loginStr:dic];
                    parameters = @{@"mid":midStr,@"token":tokenStr,@"timestamp":Timestr,@"shopId":shopID,@"goodsName":goodsNamefield.text,@"goodsCateId":self.idStr,@"specs":strs,@"status":status,@"imgName":strData,@"sign":singStr,@"barcode":codesfield.text};
                }else{
                    dic = @{@"mid":midStr,@"token":tokenStr,@"timestamp":Timestr,@"shopId":shopID,@"goodsName":goodsNamefield.text,@"goodsCateId":self.idStr,@"specs":strs,@"status":status,@"imgName":strData,@"barcode":codesfield.text,@"description":self.textview.text};
                    NSString *singStr = [TCServerSecret loginStr:dic];
                    parameters = @{@"mid":midStr,@"token":tokenStr,@"timestamp":Timestr,@"shopId":shopID,@"goodsName":goodsNamefield.text,@"goodsCateId":self.idStr,@"specs":strs,@"status":status,@"imgName":strData,@"sign":singStr,@"barcode":codesfield.text,@"description":self.textview.text};
                }
            }
            [TCNetworking postWithTcUrlString:[TCServerSecret loginAndRegisterSecretOffline:@"202011"] paramter:parameters success:^(NSString *jsonStr, NSDictionary *jsonDic) {
                NSString *codeStr = [NSString stringWithFormat:@"%@",jsonDic[@"code"]];
                if ([codeStr isEqualToString:@"1"]) {
                    
                    if (self.isQr == YES){
                        for (UIViewController *controller in self.navigationController.viewControllers) {
                            if ([controller isKindOfClass:[TCShopsManaerViewController class]]) {
                                [self.navigationController popToViewController:controller animated:YES];
                                [[NSNotificationCenter defaultCenter] postNotificationName:@"tongzhishuaxin" object:nil];
                            }
                        }
                    } else {
                        [self.navigationController popViewControllerAnimated:YES];
                        [[NSNotificationCenter defaultCenter] postNotificationName:@"tongzhishuaxin" object:nil];
                    }
                    NSLog(@"%@",jsonDic);
                    
                } else {
                    //            [TCProgressHUD showMessage:jsonDic[@"msg"]];
                }
            } failure:^(NSError *error) {
                nil;
            }];
        }
    }
}

-(NSString *)convertToJsonData:(NSDictionary *)dict
{
    NSError *error;
    NSData *jsonData = [NSJSONSerialization dataWithJSONObject:dict options:NSJSONWritingPrettyPrinted error:&error];
    
    NSString *jsonString;
    
    if (!jsonData) {
        NSLog(@"%@",error);
    }else{
        jsonString = [[NSString alloc]initWithData:jsonData encoding:NSUTF8StringEncoding];
    }
    NSMutableString *mutStr = [NSMutableString stringWithString:jsonString];
    NSRange range = {0,jsonString.length};
    //去掉字符串中的空格
    [mutStr replaceOccurrencesOfString:@" " withString:@"" options:NSLiteralSearch range:range];
    NSRange range2 = {0,mutStr.length};
    //去掉字符串中的换行符
    [mutStr replaceOccurrencesOfString:@"\n" withString:@"" options:NSLiteralSearch range:range2];
    
    NSRange range3 = {0,mutStr.length};
    [mutStr replaceOccurrencesOfString:@"\\" withString:@"" options:NSLiteralSearch range:range3];

    return mutStr;
    
}

#pragma mark x
- (void)tapCate{
    NSLog(@"选择品类");
    TCSeleCateViewController *seleVC = [[TCSeleCateViewController alloc] init];
    self.hidesBottomBarWhenPushed = YES;
    [self.navigationController pushViewController:seleVC animated:YES];
}

#pragma mark UICollectionView

- (NSInteger)collectionView:(UICollectionView *)collectionView numberOfItemsInSection:(NSInteger)section {
    if (_selectedPhotos.count >= 9) {
        return 9;
    }else{
    return _selectedPhotos.count + 1;
    }
}

- (UICollectionViewCell *)collectionView:(UICollectionView *)collectionView cellForItemAtIndexPath:(NSIndexPath *)indexPath {

    
    TZTestCell *cell = [collectionView dequeueReusableCellWithReuseIdentifier:@"TZTestCell" forIndexPath:indexPath];
    if (indexPath.row == _selectedPhotos.count) {
        cell.imageView.image = [UIImage imageNamed:@"上传图片"];
        cell.deleteBtn.hidden = YES;
    } else {
        if (self.QrDic){
            NSString *imageStr = [NSString stringWithFormat:@"%@",_selectedPhotos[indexPath.row]];
            if ([imageStr containsString:@"http"]) {
                [cell.imageView sd_setImageWithURL:[NSURL URLWithString:_selectedPhotos[indexPath.row]] placeholderImage:[UIImage imageNamed:@""]];
            }else{
                if (_selectedPhotos.count == 0) {
                    
                }else{
                    cell.imageView.image = _selectedPhotos[indexPath.row];
                }
            }
            //[_picArr addObject:_selectedPhotos[indexPath.row]];
            
        }else if (self.seleDic){
            NSString *imageStr = [NSString stringWithFormat:@"%@",_selectedPhotos[indexPath.row]];
            if ([imageStr containsString:@"http"]) {
                [cell.imageView sd_setImageWithURL:[NSURL URLWithString:_selectedPhotos[indexPath.row]] placeholderImage:[UIImage imageNamed:@""]];
            }else {
            cell.imageView.image = _selectedPhotos[indexPath.row];
        }
           // [_picArr addObject:_selectedPhotos[indexPath.row]];
        }else{
            NSString *imageStr = [NSString stringWithFormat:@"%@",_selectedPhotos[indexPath.row]];
            if ([imageStr containsString:@"http"]) {
                [cell.imageView sd_setImageWithURL:[NSURL URLWithString:_selectedPhotos[indexPath.row]] placeholderImage:[UIImage imageNamed:@""]];
            }else {
                cell.imageView.image = _selectedPhotos[indexPath.row];
            }
        }
        cell.deleteBtn.hidden = NO;
    }
    cell.deleteBtn.tag = indexPath.row;
    [cell.deleteBtn addTarget:self action:@selector(deleteBtnClik:) forControlEvents:UIControlEventTouchUpInside];
    return cell;
}

- (void)collectionView:(UICollectionView *)collectionView didSelectItemAtIndexPath:(NSIndexPath *)indexPath {
    if (indexPath.row == _selectedPhotos.count) {
        //是否谈出来选择
        BOOL showSheet = YES;
        if (showSheet) {
            UIActionSheet *sheet = [[UIActionSheet alloc] initWithTitle:nil delegate:self cancelButtonTitle:@"取消" destructiveButtonTitle:nil otherButtonTitles:@"拍照",@"去相册选择", nil];
            [sheet showInView:self.view];
        } else {
            [self pickPhotoButtonClick:nil];
        }
    } else { // preview photos / 预览照片
//        TZImagePickerController *imagePickerVc = [[TZImagePickerController alloc] initWithSelectedAssets:_selectedAssets selectedPhotos:_selectedPhotos index:indexPath.row];
//        imagePickerVc.isSelectOriginalPhoto = _isSelectOriginalPhoto;
//         imagePickerVc.allowPickingOriginalPhoto = NO;
//        [imagePickerVc setDidFinishPickingPhotosHandle:^(NSArray<UIImage *> *photos, NSArray *assets, BOOL isSelectOriginalPhoto) {
//            _selectedPhotos = [NSMutableArray arrayWithArray:photos];
//            _selectedAssets = [NSMutableArray arrayWithArray:assets];
//            _isSelectOriginalPhoto = isSelectOriginalPhoto;
//            _layout.itemCount = _selectedPhotos.count;
//            [_collectionView reloadData];
//            _collectionView.contentSize = CGSizeMake(0, ((_selectedPhotos.count + 2) / 3 ) * (_margin + _itemWH));
//
//
//        }];
//        [self presentViewController:imagePickerVc animated:YES completion:nil];
    }
}

- (void)collectionView:(UICollectionView *)collectionView itemAtIndexPath:(NSIndexPath *)sourceIndexPath didMoveToIndexPath:(NSIndexPath *)destinationIndexPath {
    if (sourceIndexPath.item >= _selectedPhotos.count || destinationIndexPath.item >= _selectedPhotos.count) return;
    UIImage *image = _selectedPhotos[sourceIndexPath.item];
    if (image) {
        [_selectedPhotos exchangeObjectAtIndex:sourceIndexPath.item withObjectAtIndex:destinationIndexPath.item];
        [_selectedAssets exchangeObjectAtIndex:sourceIndexPath.item withObjectAtIndex:destinationIndexPath.item];
        [_collectionView reloadData];
        [specbjView  removeFromSuperview];
        [self addUI];
    }
}

-(void)addUI{
    j = j++;
    if (_selectedPhotos.count > 7) {
        _collectionView.frame = CGRectMake(0, CGRectGetMaxY(backView.frame) + 15, WIDHT, 3*(_itemWH + 10) + 10 + 15);
    }else if (_selectedPhotos.count > 3){
        _collectionView.frame = CGRectMake(0, CGRectGetMaxY(backView.frame) + 15, WIDHT,(_itemWH + 10) * 2 + 10  + 15 );
    }else{
        _collectionView.frame = CGRectMake(0, CGRectGetMaxY(backView.frame) + 15, WIDHT,(_itemWH + 10) + 10  + 15 );
    }
    self.gary_twoView.frame = CGRectMake(0, CGRectGetMaxY(_collectionView.frame), WIDHT, 10);
    specbjView = [[UIView alloc]initWithFrame:CGRectMake(0, CGRectGetMaxY(self.gary_twoView.frame), WIDHT, 180)];
    self.gary_threeView.frame = CGRectMake(0, CGRectGetMaxY(specbjView.frame), WIDHT, 10);
    self.back_twoBackView.frame = CGRectMake(0, CGRectGetMaxY(self.gary_threeView.frame), WIDHT, 180);
    self.saoCodeBtn.frame = CGRectMake(15, CGRectGetMaxY(self.back_twoBackView.frame) + 40, 155, 48);
    self.xiaCodeBtn.frame = CGRectMake(WIDHT - 15 - 155, CGRectGetMaxY(self.back_twoBackView.frame) + 40, 155, 48);
    _mainScroller.contentSize = CGSizeMake(WIDHT, CGRectGetMaxY(self.xiaCodeBtn.frame) + 20);
    [_mainScroller addSubview:_collectionView];
    [_mainScroller addSubview:self.gary_twoView];
    [_mainScroller addSubview:specbjView];
    [_mainScroller addSubview:self.gary_threeView];
    [_mainScroller addSubview:self.back_twoBackView];
    [_mainScroller addSubview:self.saoCodeBtn];
    [_mainScroller addSubview:self.xiaCodeBtn];
    //商品规格
    UILabel *title_threeLabel = [UILabel publicLab:@"商品规格" textColor:TCUIColorFromRGB(0x333333) textAlignment:NSTextAlignmentLeft fontWithName:@"PingFangSC-Regular" size:14 numberOfLines:0];
    title_threeLabel.frame = CGRectMake(15, 0, 74, 44);
    [specbjView addSubview:title_threeLabel];
    
    //细线
    UIView *lineTitle = [[UIView alloc] init];
    lineTitle.frame = CGRectMake(0, CGRectGetMaxY(title_threeLabel.frame), WIDHT, 1);
    lineTitle.backgroundColor = TCBgColor;
    [specbjView addSubview:lineTitle];
    
    //for
    NSArray *arr = @[@"规格",@"价格",@"库存"];
    NSArray *plArr = @[@"添加商品规格",@"设置商品价格",@"设置库存数"];
    for (int i = 0; i < arr.count; i ++) {
        UILabel *title_Label = [UILabel publicLab:arr[i] textColor:TCUIColorFromRGB(0x666666) textAlignment:NSTextAlignmentLeft fontWithName:@"PingFangSC-Regular" size:15 numberOfLines:0];
        title_Label.frame = CGRectMake(15, CGRectGetMaxY(title_threeLabel.frame) + 45*i, 60, 45);
        [specbjView addSubview:title_Label];
        
        //
        UITextField *textfield = [[UITextField alloc]init];
        textfield.frame = CGRectMake(CGRectGetMaxX(title_Label.frame) + 10, CGRectGetMaxY(title_threeLabel.frame) + 45*i, WIDHT - 15 - (CGRectGetMaxX(title_Label.frame) + 10), 45);
        textfield.font = [UIFont systemFontOfSize:15];
        textfield.textAlignment = NSTextAlignmentRight;
        [textfield addTarget:self  action:@selector(alueChange:)  forControlEvents:UIControlEventAllEditingEvents];
        textfield.placeholder = plArr[i];
        textfield.tag = 1000 + i;
        textfield.textColor = TCUIColorFromRGB(0x333333);
        [specbjView addSubview:textfield];
        
        //线
        UIView *line_View = [[UIView alloc] init];
        line_View.backgroundColor = TCBgColor;
        line_View.frame = CGRectMake(15, CGRectGetMaxY(title_threeLabel.frame) + 45 + 45*i, WIDHT - 15, 1);
        [specbjView addSubview:line_View];
        //选中商品进来的
        if (self.seleDic) {
            [_spectArr addObjectsFromArray:self.seleDic[@"speclists"]];
            if (i == 0) {
                textfield.text = [NSString stringWithFormat:@"%@",_spectArr[0][@"spec"]];
            }else if (i == 1) {
                textfield.text = [NSString stringWithFormat:@"%@",_spectArr[0][@"price"]];
            }else if (i == 2){
                textfield.text = [NSString stringWithFormat:@"%@",_spectArr[0][@"stockCount"]];
            }
        }
        
        //扫码进来的
        if (self.QrDic){
            if (i == 0){
                textfield.text = self.QrDic[@"spec"];
            } else if (i== 1){
                textfield.text = self.QrDic[@"price"];
            }
        }
    }
}

#pragma mark Click Event

- (void)deleteBtnClik:(UIButton *)sender {
    [_picArr removeObjectAtIndex:sender.tag];
   // [_selectedAssets removeObjectAtIndex:sender.tag];
    _layout.itemCount = _selectedPhotos.count;
    [_collectionView performBatchUpdates:^{
        [_selectedPhotos removeObjectAtIndex:sender.tag];
        NSIndexPath *indexPath = [NSIndexPath indexPathForItem:sender.tag inSection:0];
        [_collectionView deleteItemsAtIndexPaths:@[indexPath]];
        
        
    } completion:^(BOOL finished) {
        [_collectionView reloadData];
        [specbjView  removeFromSuperview];
        [self addUI];
//        if (_selectedPhotos.count > 7) {
//            _collectionView.frame = CGRectMake(0, CGRectGetMaxY(backView.frame) + 15, WIDHT, 3*(_itemWH + 10) + 10 + 15);
//        }else if (_selectedPhotos.count > 3){
//            _collectionView.frame = CGRectMake(0, CGRectGetMaxY(backView.frame) + 15, WIDHT,(_itemWH + 10) * 2 + 10  + 15 );
//        }else{
//            _collectionView.frame = CGRectMake(0, CGRectGetMaxY(backView.frame) + 15, WIDHT,(_itemWH + 10) + 10  + 15 );
//        }
//         self.gary_twoView.frame = CGRectMake(0, CGRectGetMaxY(_collectionView.frame), WIDHT, 10);
//        specbjView = [[UIView alloc]initWithFrame:CGRectMake(0, CGRectGetMaxY(self.gary_twoView.frame), WIDHT, 180)];
//        self.gary_threeView.frame = CGRectMake(0, CGRectGetMaxY(specbjView.frame), WIDHT, 10);
//        self.back_twoBackView.frame = CGRectMake(0, CGRectGetMaxY(self.gary_threeView.frame), WIDHT, 180);
//        self.saoCodeBtn.frame = CGRectMake(15, CGRectGetMaxY(self.back_twoBackView.frame) + 40, 155, 48);
//        self.xiaCodeBtn.frame = CGRectMake(WIDHT - 15 - 155, CGRectGetMaxY(self.back_twoBackView.frame) + 40, 155, 48);
   }];
}

- (IBAction)pickPhotoButtonClick:(UIButton *)sender {
    TZImagePickerController *imagePickerVc = [[TZImagePickerController alloc] initWithMaxImagesCount:9 delegate:self];
    imagePickerVc.isSelectOriginalPhoto = _isSelectOriginalPhoto;
    imagePickerVc.selectedAssets = _selectedAssets; // optional, 可选的
    imagePickerVc.allowTakePicture = NO; // 隐藏拍照按钮
    
    // You can get the photos by block, the same as by delegate.
    // 你可以通过block或者代理，来得到用户选择的照片.
    [imagePickerVc setDidFinishPickingPhotosHandle:^(NSArray<UIImage *> *photos, NSArray *assets, BOOL isSelectOriginalPhoto) {
        
    }];
    
    // Set the appearance
    // 在这里设置imagePickerVc的外观
    // imagePickerVc.navigationBar.barTintColor = [UIColor greenColor];
    // imagePickerVc.oKButtonTitleColorDisabled = [UIColor lightGrayColor];
    // imagePickerVc.oKButtonTitleColorNormal = [UIColor greenColor];
    
    // Set allow picking video & photo & originalPhoto or not
    // 设置是否可以选择视频/图片/原图
    // imagePickerVc.allowPickingVideo = NO;
    // imagePickerVc.allowPickingImage = NO;
    // imagePickerVc.allowPickingOriginalPhoto = NO;
    
    [self presentViewController:imagePickerVc animated:YES completion:nil];
}

#pragma mark TZImagePickerControllerDelegate

/// User click cancel button
/// 用户点击了取消
- (void)imagePickerControllerDidCancel:(TZImagePickerController *)picker {
    //     NSLog(@"cancel");
    if ([picker isKindOfClass:[UIImagePickerController class]]) {
        [picker dismissViewControllerAnimated:YES completion:nil];
    }
    
}

/// User finish picking photo，if assets are not empty, user picking original photo.
/// 用户选择好了图片，如果assets非空，则用户选择了原图。
- (void)imagePickerController:(TZImagePickerController *)picker didFinishPickingPhotos:(NSArray *)photos sourceAssets:(NSArray *)assets isSelectOriginalPhoto:(BOOL)isSelectOriginalPhoto {
   // _selectedPhotos = [NSMutableArray arrayWithArray:photos];
    for (UIImage *ima in photos) {
        [ima fixOrientation];
        [_selectedPhotos addObject:ima];
        [_selectedAssets addObject:ima];
    }
    //_selectedAssets = [NSMutableArray arrayWithArray:assets];
    _isSelectOriginalPhoto = isSelectOriginalPhoto;
    _layout.itemCount = _selectedPhotos.count;
    _collectionView.contentSize = CGSizeMake(0, ((_selectedPhotos.count + 2) / 3 ) * (_margin + _itemWH));
        for (int i = 0; i < _selectedPhotos.count; i++) {
            NSString *imageStr = [NSString stringWithFormat:@"%@",_selectedPhotos[i]];
            if ([imageStr containsString:@"http"]){
                
            }else{
            UIImage *image = _selectedPhotos[i];
                [image fixOrientation];
            //放入全局队列中保存头像
            dispatch_async(dispatch_get_global_queue(0, 0), ^{
                //将头像写入沙盒
                self.shopPicData = UIImageJPEGRepresentation(image, 0.3);
                [self.shopPicData writeToFile:[[NSHomeDirectory() stringByAppendingPathComponent:@"Document"]stringByAppendingPathComponent:@"store.png"] atomically:YES];
                [self goodsPicRequest:self.shopPicData];
            });
            }
        }
    
    
}

#pragma mark -- 循环上传图片
- (void)goodsPicRequest:(NSData *)PicData
{
    [_picArr removeAllObjects];
    [SVProgressHUD setDefaultStyle:SVProgressHUDStyleDark];
    [SVProgressHUD showWithStatus:@"获取中..."];
    NSString *shopID = [NSString stringWithFormat:@"%@",[_userdefaults valueForKey:@"shopID"]];
    NSDictionary *dic = @{@"shopId":shopID};
    NSString *singStr = [TCServerSecret signStr:dic];
    
    NSDictionary *parameters = @{@"shopId":shopID,@"sign":singStr};
    NSDictionary *dicc = [TCServerSecret report:parameters];
    
    //提交修改，上传图片至服务器
    AFHTTPSessionManager *manager = [AFHTTPSessionManager manager];
    manager.responseSerializer = [AFHTTPResponseSerializer serializer];
    [manager POST:[TCServerSecret loginAndRegisterSecretOffline:@"202012"] parameters:dicc constructingBodyWithBlock:^(id<AFMultipartFormData>  _Nonnull formData) {
        //开始滚动
        if (PicData) {
            [formData appendPartWithFileData:PicData  name:@"image" fileName:@"image.png" mimeType:@"image/png"];
        }
    } success:^(NSURLSessionDataTask * _Nonnull task, id  _Nonnull responseObject) {
        NSDictionary *dic = [NSJSONSerialization JSONObjectWithData:responseObject options:NSJSONReadingMutableContainers error:nil];
        
        NSLog(@"提交图片的返回结果 %@", dic[@"msg"]);
        NSString *codeStr = [NSString stringWithFormat:@"%@",dic[@"code"]];
        //把图片地址保存到数组中
        
        if ([codeStr isEqualToString:@"1"]) {
            [TCProgressHUD showMessage:dic[@"msg"]];
            [_picArr addObject:dic[@"data"][@"url"]];
            NSLog(@"%@--",_picArr);
            [_collectionView reloadData];
            [specbjView  removeFromSuperview];
            [self addUI];
        }else{
            [TCProgressHUD showMessage:dic[@"msg"]];
        }
        [SVProgressHUD dismiss];
    } failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) {
        nil;
    }];
}

/// User finish picking video,
/// 用户选择好了视频
- (void)imagePickerController:(TZImagePickerController *)picker didFinishPickingVideo:(UIImage *)coverImage sourceAssets:(id)asset {
    _selectedPhotos = [NSMutableArray arrayWithArray:@[coverImage]];
    _selectedAssets = [NSMutableArray arrayWithArray:@[asset]];
    _layout.itemCount = _selectedPhotos.count;
    // open this code to send video / 打开这段代码发送视频
    // [[TZImageManager manager] getVideoOutputPathWithAsset:asset completion:^(NSString *outputPath) {
    // NSLog(@"视频导出到本地完成,沙盒路径为:%@",outputPath);
    // Export completed, send video here, send by outputPath or NSData
    // 导出完成，在这里写上传代码，通过路径或者通过NSData上传
    
    // }];
    //[_collectionView reloadData];
    //_collectionView.contentSize = CGSizeMake(0, ((_selectedPhotos.count + 2) / 3 ) * (_margin + _itemWH));
}

#pragma mark - UIActionSheetDelegate

- (void)actionSheet:(UIActionSheet *)actionSheet clickedButtonAtIndex:(NSInteger)buttonIndex {
    if (buttonIndex == 0) { // take photo / 去拍照
        [self takePhoto];
    } else if (buttonIndex == 1) {
        //选择图片
        [self pickPhotoButtonClick:nil];
    }
}

#pragma mark - UIImagePickerController

- (void)takePhoto {
    AVAuthorizationStatus authStatus = [AVCaptureDevice authorizationStatusForMediaType:AVMediaTypeVideo];
    if ((authStatus == AVAuthorizationStatusRestricted || authStatus == AVAuthorizationStatusDenied) && iOS7Later) {
        // 无相机权限 做一个友好的提示
        if (iOS8Later) {
            UIAlertView * alert = [[UIAlertView alloc]initWithTitle:@"无法使用相机" message:@"请在iPhone的""设置-隐私-相机""中允许访问相机" delegate:self cancelButtonTitle:@"取消" otherButtonTitles:@"设置", nil];
            [alert show];
        } else {
            UIAlertView * alert = [[UIAlertView alloc]initWithTitle:@"无法使用相机" message:@"请在iPhone的""设置-隐私-相机""中允许访问相机" delegate:self cancelButtonTitle:@"确定" otherButtonTitles:nil];
            [alert show];
        }
    } else if (authStatus == AVAuthorizationStatusNotDetermined) {
        // fix issue 466, 防止用户首次拍照拒绝授权时相机页黑屏
        if (iOS7Later) {
            [AVCaptureDevice requestAccessForMediaType:AVMediaTypeVideo completionHandler:^(BOOL granted) {
                if (granted) {
                    dispatch_sync(dispatch_get_main_queue(), ^{
                        [self takePhoto];
                    });
                }
            }];
        } else {
            [self takePhoto];
        }
        // 拍照之前还需要检查相册权限
    } else if ([TZImageManager authorizationStatus] == 2) { // 已被拒绝，没有相册权限，将无法保存拍的照片
        if (iOS8Later) {
            UIAlertView * alert = [[UIAlertView alloc]initWithTitle:@"无法访问相册" message:@"请在iPhone的""设置-隐私-相册""中允许访问相册" delegate:self cancelButtonTitle:@"取消" otherButtonTitles:@"设置", nil];
            [alert show];
        } else {
            UIAlertView * alert = [[UIAlertView alloc]initWithTitle:@"无法访问相册" message:@"请在iPhone的""设置-隐私-相册""中允许访问相册" delegate:self cancelButtonTitle:@"确定" otherButtonTitles:nil];
            [alert show];
        }
    } else if ([TZImageManager authorizationStatus] == 0) { // 未请求过相册权限
        [[TZImageManager manager] requestAuthorizationWithCompletion:^{
            [self takePhoto];
        }];
    } else {
        [self pushImagePickerController];
    }
}
// 调用相机
- (void)pushImagePickerController {
    // 提前定位
    //    __weak typeof(self) weakSelf = self;
    //    [[TZLocationManager manager] startLocationWithSuccessBlock:^(CLLocation *location, CLLocation *oldLocation) {
    //        weakSelf.location = location;
    //    } failureBlock:^(NSError *error) {
    //        weakSelf.location = nil;
    //    }];
    
    UIImagePickerControllerSourceType sourceType = UIImagePickerControllerSourceTypeCamera;
    if ([UIImagePickerController isSourceTypeAvailable: UIImagePickerControllerSourceTypeCamera]) {
        self.imagePickerVc.sourceType = sourceType;
        if(iOS8Later) {
            _imagePickerVc.modalPresentationStyle = UIModalPresentationOverCurrentContext;
        }
        [self presentViewController:_imagePickerVc animated:YES completion:nil];
    } else {
        NSLog(@"模拟器中无法打开照相机,请在真机中使用");
    }
}
- (void)imagePickerController:(UIImagePickerController*)picker didFinishPickingMediaWithInfo:(NSDictionary *)info {
    [picker dismissViewControllerAnimated:YES completion:nil];
    NSString *type = [info objectForKey:UIImagePickerControllerMediaType];
    if ([type isEqualToString:@"public.image"]) {
        TZImagePickerController *tzImagePickerVc = [[TZImagePickerController alloc] initWithMaxImagesCount:1 delegate:self];
        tzImagePickerVc.sortAscendingByModificationDate = YES;
        [tzImagePickerVc showProgressHUD];
        UIImage *oldimage = [info objectForKey:UIImagePickerControllerOriginalImage];
        UIImage *image = [oldimage fixOrientation];
        
        
        // save photo and get asset / 保存图片，获取到asset
        //        [TZImageManager manager] savePhotoWithImage:<#(UIImage *)#> completion:<#^(void)completion#>
        
        [[TZImageManager manager] savePhotoWithImage:image location:self.location completion:^(NSError *error){
            if (error) {
                [tzImagePickerVc hideProgressHUD];
                NSLog(@"图片保存失败 %@",error);
            } else {
                // BOOL allowCrop = YES;
                [[TZImageManager manager] getCameraRollAlbum:NO allowPickingImage:YES completion:^(TZAlbumModel *model) {
                    [[TZImageManager manager] getAssetsFromFetchResult:model.result allowPickingVideo:NO allowPickingImage:YES completion:^(NSArray<TZAssetModel *> *models) {
                        [tzImagePickerVc hideProgressHUD];
                        TZAssetModel *assetModel = [models firstObject];
                        if (tzImagePickerVc.sortAscendingByModificationDate) {
                            assetModel = [models lastObject];
                        }
                        [self refreshCollectionViewWithAddedAsset:assetModel.asset image:image];
                        //                        }
                    }];
                }];
            }
        }];
    }
}
- (void)refreshCollectionViewWithAddedAsset:(id)asset image:(UIImage *)image {
    [image fixOrientation];
    [_selectedAssets addObject:asset];
    [_selectedPhotos addObject:image];
   // [_collectionView reloadData];
        for (int i = 0; i < _selectedPhotos.count; i++) {
            NSString *imageStr = [NSString stringWithFormat:@"%@",_selectedPhotos[i]];
            if ([imageStr containsString:@"http"]){
                
            }else{
            UIImage *image = _selectedPhotos[i];
                [image fixOrientation];
            //放入全局队列中保存头像
            dispatch_async(dispatch_get_global_queue(0, 0), ^{
                //将头像写入沙盒
                self.shopPicData = UIImageJPEGRepresentation(image, 0.3);
                [self.shopPicData writeToFile:[[NSHomeDirectory() stringByAppendingPathComponent:@"Document"]stringByAppendingPathComponent:@"store.png"] atomically:YES];
                [self goodsPicRequest:self.shopPicData];
            });
        if ([asset isKindOfClass:[PHAsset class]]) {
            PHAsset *phAsset = asset;
            NSLog(@"location:%@",phAsset.location);
        }
            }
        }
    
   
    
}

#pragma mark - UIAlertViewDelegate

- (void)alertView:(UIAlertView *)alertView clickedButtonAtIndex:(NSInteger)buttonIndex {
    if (buttonIndex == 1) { // 去设置界面，开启相机访问权限
        if (iOS8Later) {
            [[UIApplication sharedApplication] openURL:[NSURL URLWithString:UIApplicationOpenSettingsURLString]];
        }
    }
}

#pragma mark -- 规格点击
- (void)sendValue:(NSString *)tagStr andName:(NSString *)nameStr
{
    NSLog(@"%@",tagStr);
    self.seleCategorylabel.text = nameStr;
    self.idStr = tagStr;
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

/*
#pragma mark - Navigation

// In a storyboard-based application, you will often want to do a little preparation before navigation
- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {
    // Get the new view controller using [segue destinationViewController].
    // Pass the selected object to the new view controller.
}
*/

@end
